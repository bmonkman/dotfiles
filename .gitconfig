#[user]
#	name = Bill Monkman
#	email = 
#	signingkey = 
[core]
	editor = vim
	excludesfile = /Users/billmonkman/.gitignore_global
	autocrlf = input
[color]
	ui = auto
[color "branch"]
	current = red
	local = yellow
	remote = green
[color "diff"]
	meta = cyan
	frag = magenta
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
[alias]
	st = status -sb
	ci = commit
	co = checkout
	br = branch
	cp = cherry-pick
	cps = cherry-pick -s
	meh = commit --amend
	wdiff = diff --word-diff=color
	wshow = show --word-diff=color
	lasttag = describe --tags --abbrev=0
	branches = branch -vv
	autotrack = "!x() { b=`git symbolic-ref -q --short HEAD` && git branch -u \"origin/$b\" || echo \"error: not a branch\"; }; x"
	slog = log --pretty=format:"%C(yellow)%h%C(white)%d\\ %C(reset)%s\\ \\ [%C(blue)%cn%C(reset),\\ %C(cyan)%ar%C(reset)]"
	glog = log --graph --pretty=format:"%C(yellow)%h%C(white)%d\\ %C(reset)%s\\ \\ [%C(blue)%cn%C(reset),\\ %C(cyan)%ar%C(reset)]"
	gflog = log -p --cc --graph --decorate
	wtf = log --pretty=format:"%C(yellow)%h%C(white)%d%C(reset)\\ by\\ %C(blue)%cn%C(reset),\\ %C(cyan)%ar%C(reset)%n\\ %s%n" --stat
	unci = reset HEAD^
	uncommit = reset HEAD^
	ls = ls-files
	in = !git wtf HEAD..HEAD@{u}
	out = !git wtf HEAD@{u}..HEAD
	killbranches = !git branch | grep -v '\\bmaster\\b' | xargs git branch -d 2> /dev/null
	sync = !git pull && git push
	comerge = "!x() { target=`git symbolic-ref HEAD`; git co $1; git merge $target; }; x"
	ours = "!f() { git checkout --ours -- $@ && git add -- $@; }; f"
	theirs = "!f() { git checkout --theirs -- $@ && git add -- $@; }; f"
	assume = update-index --assume-unchanged
	unassume = update-index --no-assume-unchanged
	unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
	assumed = "!git ls-files -v | grep ^h | cut -c 3-"
	authors = shortlog -sn
	serve = daemon --verbose --export-all --base-path=.git --reuseaddr --strict-paths .git/
	serveall = daemon --verbose --export-all --base-path=. --reuseaddr .
	addpr = "!f() { git fetch origin pull/$1/head:pr/$1; }; f"
	cleanup = "!git fetch --prune; git branch --merged origin/master | grep -v 'master|*' | xargs -n 1 git branch -d"
[instaweb]
	httpd=webrick
[push]
	default = current
[pull]
	rebase = true
[branch]
	autosetupmerge = true
	autosetuprebase = always
[diff]
	algorithm = patience
[credential]
	helper = osxkeychain
[commit]
	gpgsign = true
[gpg]
	program = /usr/local/bin/gpg
[url "git@github.com:"]
	insteadOf = "https://github.com/"
[filter "lfs"]
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
